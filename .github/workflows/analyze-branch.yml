# This is a basic workflow to help you get started with Actions

name: Analyze branch - SonarQube

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - main
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Use an existing action, you can look in the market place to find what you need and how to use it, to setup the sonar scanner
      - name : Setup sonnar scanner
        uses : warchant/setup-sonar-scanner@v1
        
      # Another existing action, this one to checkout the repository
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0

       # Conditional execution can be done, in this case the parameter to use with sonar scanner are different if we are analyzing master or a branch
      - if: endsWith(github.REF, '/master') != true
        name: 'Run an analysis of the ${{ github.REF }} branch'
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.branch.name=${GITHUB_REF:11}
          -Dsonar.scm.provider=git

      - if: endsWith(github.REF, '/master') == true
        name: 'Run an analysis of the master branch'
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.scm.provider=git
          -Dsonar.java.binaries=/tmp
